name: Production Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Next.js app
      run: npm run build

    - name: Run Tests
      run: npm run test

    - name: Run E2E tests
      run: npm run test:e2e
      env:
        SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
        CYPRESS_TEST_UID: ${{ secrets.CYPRESS_TEST_UID }}

    - name: Get package version
      id: package-version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        generateReleaseNotes: true
        tag: v${{ env.VERSION }}
        commit: main